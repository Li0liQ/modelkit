{"version":3,"sources":["index.js","modelkit.js","utils/flag-utils.js","plugins/index.js","plugins/modelkit-manifest-plugin.js","plugins/modelkit-ignore-plugin.js","loaders/index.js","loaders/modelkit-json-loader.js","loaders/modelkit-base-loader.js","loaders/modelkit-js-loader.js","loaders/modelkit-yarn-loader.js"],"names":["default","Modelkit","config","context","plugins","triggerPluginsMethod","files","readFiles","assignLoadersToFiles","loaders","readFileFlags","flags","getAllFlags","flagPermutations","freezeFlags","output","generateOutput","flushOutput","methodName","plugin","result","flagObj","flagIndex","outputItem","flagDirectory","getDirectoryByFlag","directory","join","outputDir","Object","assign","file","parent","source","loader","getFileSourceWithFlags","filePath","fileName","writeFileSync","flagDirName","replace","filePathList","readdirSync","inputDir","statSync","isFile","fileList","readFileSync","basename","test","Error","getFlagBits","flagList","flagBits","i","length","getBooleanFlagPermutations","currentFlags","resultList","changeFlagByIndex","push","flag","ManifestPlugin","featureFlagsToDirectoryMap","JSON","stringify","IgnorePlugin","indexOf","deleteProperty","obj","pattern","value","key","subObj","updateProperty","JsonLoader","changes","json","parse","agg","delete","update","BaseLoader","RegExp","JsLoader","flagFunction","functionSearchPattern","foundResult","search","arguments","getRaw","node","YarnLoader"],"mappings":"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","file":"","sourcesContent":["export { default } from './modelkit';\r\nexport * from './plugins';\r\nexport * from './loaders';\r\n","import * as _ from 'lodash';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\nimport mkdirp from 'mkdirp';\r\nimport { getBooleanFlagPermutations } from './utils/flag-utils';\r\n\r\nexport default class Modelkit {\r\n    run(config) {\r\n        const context = {\r\n            config,\r\n        };\r\n\r\n        context.plugins = config.plugins;\r\n\r\n        this.triggerPluginsMethod('beforeStart', context);\r\n\r\n        context.files = this.readFiles(config);\r\n        this.assignLoadersToFiles(config.loaders, context.files);\r\n        this.readFileFlags(context.files);\r\n\r\n        context.flags = this.getAllFlags(context.files);\r\n\r\n        context.flagPermutations = getBooleanFlagPermutations(context.flags, config.freezeFlags);\r\n\r\n        context.output = this.generateOutput(config, context);\r\n\r\n        this.triggerPluginsMethod('afterGenerateOutput', context);\r\n\r\n        this.flushOutput(config, context);\r\n\r\n        this.triggerPluginsMethod('afterEnd', context);\r\n    }\r\n\r\n    triggerPluginsMethod(methodName, context) {\r\n        _.forEach(context.plugins, (plugin) => {\r\n            if (_.isFunction(plugin[methodName])) {\r\n                plugin[methodName](context);\r\n            }\r\n        });\r\n    }\r\n\r\n    generateOutput(config, context) {\r\n        // for every permutation generate { folder, files }\r\n        const result = _.map(context.flagPermutations, (flagObj, flagIndex) => {\r\n            const outputItem = {};\r\n            // TODO: allow plugins to provide additional replacements in filename\r\n            const flagDirectory = this.getDirectoryByFlag({ flagObj, flagIndex, config });\r\n            outputItem.directory = path.join(config.outputDir, flagDirectory);\r\n            outputItem.flags = Object.assign({}, flagObj);\r\n            outputItem.files = _.map(context.files, file => Object.assign({}, file, {\r\n                parent: file,\r\n                source: file.loader\r\n                    ? file.loader.getFileSourceWithFlags(file, outputItem.flags)\r\n                    : file.source,\r\n                filePath: path.join(outputItem.directory, file.fileName),\r\n            }));\r\n\r\n            return outputItem;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    flushOutput(config, context) {\r\n        mkdirp(config.outputDir);\r\n\r\n        _.forEach(context.output, ({ directory, files }) => {\r\n            mkdirp(directory);\r\n            _.forEach(files, file => fs.writeFileSync(\r\n                    file.filePath,\r\n                    file.source,\r\n                ),\r\n            );\r\n        });\r\n    }\r\n\r\n    getDirectoryByFlag({ flagIndex, config }) {\r\n        // TODO: allow plugins to provide additional replacements in filename\r\n        const result = config.flagDirName.replace('[id]', flagIndex);\r\n        return result;\r\n    }\r\n\r\n    readFileFlags(files) {\r\n        _.each(files, (file) => {\r\n            if (file.loader) {\r\n                file.flags = file.loader.readFileFlags(file);\r\n            }\r\n        });\r\n    }\r\n\r\n    getAllFlags(files) {\r\n        // we support only boolean flags for now\r\n        // hence union and returning flag names only works fine\r\n        const flags = _.union(\r\n            _.flatten(\r\n                _.map(\r\n                    _.filter(files, file => file.flags),\r\n                    file => file.flags,\r\n                ),\r\n            ),\r\n        );\r\n\r\n        return flags;\r\n    }\r\n\r\n    readFiles(config) {\r\n        const filePathList = _.filter(\r\n            _.map(\r\n                fs.readdirSync(config.inputDir),\r\n                fileName => path.join(config.inputDir, fileName),\r\n            ),\r\n            filePath => fs.statSync(filePath).isFile(),\r\n        );\r\n\r\n        const fileList = _.map(filePathList, (filePath) => {\r\n            const source = fs.readFileSync(filePath, 'utf8');\r\n            const fileName = path.basename(filePath);\r\n\r\n            return {\r\n                fileName,\r\n                filePath,\r\n                source,\r\n            };\r\n        });\r\n\r\n        return fileList;\r\n    }\r\n\r\n    assignLoadersToFiles(loaders, files) {\r\n        _.each(files, file => _.each(loaders, (loader) => {\r\n            if (loader.test.test(file.fileName)) {\r\n                if (file.loader) {\r\n                    throw new Error(`File ${file.fileName} has more than one loader matching it. Please, fix config.`);\r\n                }\r\n\r\n                file.loader = loader;\r\n            }\r\n        }));\r\n    }\r\n}\r\n","export const getFlagBits = (flagList, flags) => {\r\n    let flagBits = 0;\r\n\r\n    for (let i = 0; i < flagList.length; i += 1) {\r\n        if (flags[flagList[i]]) {\r\n            /* eslint-disable no-bitwise */\r\n            flagBits += 1 << i;\r\n        }\r\n    }\r\n\r\n    return flagBits;\r\n};\r\n\r\nexport const getBooleanFlagPermutations = (flagList, freezeFlags = {}) => {\r\n    const currentFlags = Object.assign({}, freezeFlags);\r\n    const resultList = [];\r\n\r\n    const changeFlagByIndex = (flagIndex) => {\r\n        if (flagIndex >= flagList.length) {\r\n            resultList.push(Object.assign({}, currentFlags));\r\n        } else {\r\n            const flag = flagList[flagIndex];\r\n            if (typeof freezeFlags[flag] !== 'undefined') {\r\n                changeFlagByIndex(flagIndex + 1);\r\n            } else {\r\n                currentFlags[flag] = false;\r\n                changeFlagByIndex(flagIndex + 1);\r\n                currentFlags[flag] = true;\r\n                changeFlagByIndex(flagIndex + 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    changeFlagByIndex(0);\r\n\r\n    return resultList;\r\n};\r\n","export { default as ModelkitManifestPlugin } from './modelkit-manifest-plugin';\nexport { default as ModelkitIgnorePlugin } from './modelkit-ignore-plugin';\n","import * as _ from 'lodash';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\n\r\nexport default class ManifestPlugin {\r\n    constructor(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    afterEnd(context) {\r\n        const featureFlagsToDirectoryMap = _.map(context.output, ({ flags, directory }) =>\r\n            ({\r\n                flags,\r\n                directory,\r\n            }),\r\n        );\r\n\r\n        fs.writeFileSync(\r\n            path.join(context.config.outputDir, this.config.file),\r\n            JSON.stringify(featureFlagsToDirectoryMap, null, 2),\r\n        );\r\n    }\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nexport default class IgnorePlugin {\r\n    constructor(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    afterGenerateOutput(context) {\r\n        _.forEach(context.output, (outputItem) => {\r\n            if (!outputItem.flags[this.config.flag] === true) {\r\n                return;\r\n            }\r\n\r\n            outputItem.files = _.filter(outputItem.files, file =>\r\n                this.config.files.indexOf(file.parent.fileName) === -1,\r\n            );\r\n        });\r\n    }\r\n}\r\n","export { default as ModelkitJsonLoader } from './modelkit-json-loader';\r\nexport { default as ModelkitJsLoader } from './modelkit-js-loader';\r\nexport { default as ModelkitYarnLoader } from './modelkit-yarn-loader';\r\n","import * as _ from 'lodash';\r\nimport BaseLoader from './modelkit-base-loader';\r\n\r\n// No array support atm.\r\nconst deleteProperty = (obj, pattern) => {\r\n    _.forEach(pattern, (value, key) => {\r\n        const subObj = obj[key];\r\n\r\n        if (typeof subObj === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (_.isPlainObject(value) && _.isPlainObject(subObj)) {\r\n            deleteProperty(subObj, value);\r\n        } else {\r\n            delete obj[key];\r\n        }\r\n    });\r\n};\r\n\r\nconst updateProperty = (obj, pattern) => {\r\n    _.forEach(pattern, (value, key) => {\r\n        const subObj = obj[key];\r\n\r\n        if (typeof subObj === 'undefined') {\r\n            obj[key] = value;\r\n\r\n            return;\r\n        }\r\n\r\n        if (_.isPlainObject(value) && _.isPlainObject(subObj)) {\r\n            updateProperty(subObj, value);\r\n        } else {\r\n            obj[key] = value;\r\n        }\r\n    });\r\n};\r\n\r\nexport default class JsonLoader extends BaseLoader {\r\n    constructor(config) {\r\n        super(config);\r\n        this.changes = config.changes;\r\n    }\r\n\r\n    readFileFlags() {\r\n        const flags = _.map(this.changes, i => i.flag);\r\n\r\n        return flags;\r\n    }\r\n\r\n    getFileSourceWithFlags(file, flags) {\r\n        let json = JSON.parse(file.source);\r\n\r\n        json = _.reduce(flags, (agg, value, key) => {\r\n            if (!value) {\r\n                return agg;\r\n            }\r\n\r\n            const changes = _.filter(this.changes, i => i.flag === key)[0];\r\n\r\n            if (typeof changes === 'undefined') {\r\n                return agg;\r\n            }\r\n\r\n            if (changes.delete) {\r\n                deleteProperty(agg, changes.delete);\r\n            }\r\n\r\n            if (changes.update) {\r\n                updateProperty(agg, changes.update);\r\n            }\r\n\r\n            return agg;\r\n        }, json);\r\n\r\n        const result = JSON.stringify(json, null, 2);\r\n\r\n        return result;\r\n    }\r\n}\r\n","import * as _ from 'lodash';\r\nimport escapeRegex from 'escape-string-regexp';\r\n\r\nexport default class BaseLoader {\r\n    constructor(config) {\r\n        if (config.test) {\r\n            this.test = config.test;\r\n        } else {\r\n            this.test = new RegExp(_.map(config.files, escapeRegex).join('|'));\r\n        }\r\n    }\r\n}\r\n","import * as _ from 'lodash';\r\nimport grasp from 'grasp';\r\nimport BaseLoader from './modelkit-base-loader';\r\n\r\nexport default class JsLoader extends BaseLoader {\r\n    constructor(config) {\r\n        super(config);\r\n        this.flagFunction = config.flagFunction;\r\n    }\r\n\r\n    readFileFlags(file) {\r\n        const functionSearchPattern = `${this.flagFunction}(_str, _bool)`;\r\n        const foundResult = grasp.search('equery', functionSearchPattern, file.source);\r\n        const flags = _.map(foundResult, i => i.arguments[0].value);\r\n\r\n        return flags;\r\n    }\r\n\r\n    getFileSourceWithFlags(file, flags) {\r\n        const functionSearchPattern = `${this.flagFunction}(_str, _bool)`;\r\n        const result = grasp.replace('equery', functionSearchPattern,\r\n            (getRaw, node) => JSON.stringify(flags[node.arguments[0].value]),\r\n            file.source,\r\n        );\r\n\r\n        return result;\r\n    }\r\n}\r\n","import * as _ from 'lodash';\r\nimport parse from 'yarn/lib/lockfile/parse';\r\nimport stringify from 'yarn/lib/lockfile/stringify';\r\nimport BaseLoader from './modelkit-base-loader';\r\n\r\n// No array support atm.\r\nconst deleteProperty = (obj, pattern) => {\r\n    _.forEach(pattern, (value, key) => {\r\n        const subObj = obj[key];\r\n\r\n        if (typeof subObj === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (_.isPlainObject(value) && _.isPlainObject(subObj)) {\r\n            deleteProperty(subObj, value);\r\n        } else {\r\n            delete obj[key];\r\n        }\r\n    });\r\n};\r\n\r\nconst updateProperty = (obj, pattern) => {\r\n    _.forEach(pattern, (value, key) => {\r\n        const subObj = obj[key];\r\n\r\n        if (typeof subObj === 'undefined') {\r\n            obj[key] = value;\r\n\r\n            return;\r\n        }\r\n\r\n        if (_.isPlainObject(value) && _.isPlainObject(subObj)) {\r\n            updateProperty(subObj, value);\r\n        } else {\r\n            obj[key] = value;\r\n        }\r\n    });\r\n};\r\n\r\nexport default class YarnLoader extends BaseLoader {\r\n    constructor(config) {\r\n        super(config);\r\n        this.changes = config.changes;\r\n    }\r\n\r\n    readFileFlags() {\r\n        const flags = _.map(this.changes, i => i.flag);\r\n\r\n        return flags;\r\n    }\r\n\r\n    getFileSourceWithFlags(file, flags) {\r\n        const source = file.source.replace(/\\r\\n/g, '\\n'); // important for yarn parser\r\n        let json = parse(source, file.filePath);\r\n\r\n        json = _.reduce(flags, (agg, value, key) => {\r\n            if (!value) {\r\n                return agg;\r\n            }\r\n\r\n            const changes = _.filter(this.changes, i => i.flag === key)[0];\r\n\r\n            if (typeof changes === 'undefined') {\r\n                return agg;\r\n            }\r\n\r\n            if (changes.delete) {\r\n                deleteProperty(agg, changes.delete);\r\n            }\r\n\r\n            if (changes.update) {\r\n                updateProperty(agg, changes.update);\r\n            }\r\n\r\n            return agg;\r\n        }, json);\r\n\r\n        const result = stringify(json, false);\r\n\r\n        return result;\r\n    }\r\n}\r\n"]}