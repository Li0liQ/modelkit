{"version":3,"sources":["index.js","modelkit.js","utils/flag-utils.js","plugins/index.js","plugins/modelkit-manifest-plugin.js","loaders/index.js","loaders/modelkit-json-loader.js","loaders/modelkit-base-loader.js","loaders/modelkit-js-loader.js","loaders/modelkit-yarn-loader.js"],"names":["default","Modelkit","config","context","triggerPluginsMethod","files","readFiles","assignLoadersToFiles","loaders","readFileFlags","flags","getAllFlags","flagPermutations","freezeFlags","flagPermutationDirectories","flagObj","flagIndex","getDirectoryByFlag","outputDir","applyFlagsToAllFilesAndWrite","methodName","plugins","plugin","flagCopy","Object","assign","flagDirectory","join","file","loader","source","getFileSourceWithFlags","writeFileSync","fileName","result","flagDirName","replace","filePathList","readdirSync","inputDir","statSync","filePath","isFile","fileList","readFileSync","basename","test","Error","getFlagBits","flagList","flagBits","i","length","getBooleanFlagPermutations","currentFlags","resultList","changeFlagByIndex","push","flag","sortFlags","ManifestPlugin","featureFlagsToDirectoryMap","directory","JSON","stringify","deleteProperty","obj","pattern","value","key","subObj","updateProperty","JsonLoader","changes","json","parse","agg","delete","update","BaseLoader","RegExp","JsLoader","flagFunction","functionSearchPattern","foundResult","search","arguments","getRaw","node","YarnLoader"],"mappings":"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","file":"","sourcesContent":["export { default } from './modelkit';\r\nexport * from './plugins';\r\nexport * from './loaders';\r\n","import * as _ from 'lodash';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\nimport mkdirp from 'mkdirp';\r\nimport { getBooleanFlagPermutations, sortFlags } from './utils/flag-utils';\r\n\r\nexport default class Modelkit {\r\n    run(config) {\r\n        const context = {\r\n            config,\r\n        };\r\n\r\n        this.triggerPluginsMethod('beforeStart', context);\r\n\r\n        context.files = this.readFiles(config);\r\n        this.assignLoadersToFiles(config.loaders, context.files);\r\n        this.readFileFlags(context.files);\r\n\r\n        context.flags = this.getAllFlags(context.files);\r\n\r\n        // Extract permutations into a plugin. Maybe.\r\n        context.flagPermutations = sortFlags(\r\n            getBooleanFlagPermutations(context.flags, config.freezeFlags),\r\n        );\r\n\r\n        context.flagPermutationDirectories = _.map(\r\n            context.flagPermutations,\r\n            (flagObj, flagIndex) => this.getDirectoryByFlag({ flagObj, flagIndex, config }),\r\n        );\r\n\r\n        mkdirp(config.outputDir);\r\n\r\n        this.applyFlagsToAllFilesAndWrite(config, context);\r\n\r\n        this.triggerPluginsMethod('afterEnd', context);\r\n    }\r\n\r\n    triggerPluginsMethod(methodName, context) {\r\n        _.forEach(context.plugins, (plugin) => {\r\n            if (_.isFunction(plugin[methodName])) {\r\n                plugin[methodName](context);\r\n            }\r\n        });\r\n    }\r\n\r\n    applyFlagsToAllFilesAndWrite(config, context) {\r\n        _.forEach(context.flagPermutations, (flagObj, flagIndex) => {\r\n            const flagCopy = Object.assign({}, flagObj);\r\n            // TODO: allow plugins to provide additional replacements in filename\r\n            const flagDirectory = this.getDirectoryByFlag({ flagObj, flagIndex, config });\r\n            const outputDir = path.join(config.outputDir, flagDirectory);\r\n\r\n            mkdirp(outputDir);\r\n\r\n            _.forEach(context.files, (file) => {\r\n                if (file.loader) {\r\n                    file.source = file.loader.getFileSourceWithFlags(file, flagCopy);\r\n                }\r\n\r\n                fs.writeFileSync(\r\n                    path.join(outputDir, file.fileName),\r\n                    file.source,\r\n                );\r\n            });\r\n        });\r\n    }\r\n\r\n    getDirectoryByFlag({ flagIndex, config }) {\r\n        // TODO: allow plugins to provide additional replacements in filename\r\n        const result = config.flagDirName.replace('[id]', flagIndex);\r\n        return result;\r\n    }\r\n\r\n    readFileFlags(files) {\r\n        _.each(files, (file) => {\r\n            if (file.loader) {\r\n                file.flags = file.loader.readFileFlags(file);\r\n            }\r\n        });\r\n    }\r\n\r\n    getAllFlags(files) {\r\n        // we support only boolean flags for now\r\n        // hence union and returning flag names only works fine\r\n        const flags = _.union(_.flatten(_.map(files, file => file.flags)));\r\n        return flags;\r\n    }\r\n\r\n    readFiles(config) {\r\n        const filePathList = _.filter(\r\n            _.map(\r\n                fs.readdirSync(config.inputDir),\r\n                fileName => path.join(config.inputDir, fileName),\r\n            ),\r\n            filePath => fs.statSync(filePath).isFile(),\r\n        );\r\n\r\n        const fileList = _.map(filePathList, (filePath) => {\r\n            const source = fs.readFileSync(filePath, 'utf8');\r\n            const fileName = path.basename(filePath);\r\n\r\n            return {\r\n                fileName,\r\n                filePath,\r\n                source,\r\n            };\r\n        });\r\n\r\n        return fileList;\r\n    }\r\n\r\n    assignLoadersToFiles(loaders, files) {\r\n        _.each(files, file => _.each(loaders, (loader) => {\r\n            if (loader.test.test(file.fileName)) {\r\n                if (file.loader) {\r\n                    throw new Error(`File ${file.fileName} has more than one loader matching it. Please, fix config.`);\r\n                }\r\n\r\n                file.loader = loader;\r\n            }\r\n        }));\r\n    }\r\n}\r\n","export const getFlagBits = (flagList, flags) => {\r\n    let flagBits = 0;\r\n\r\n    for (let i = 0; i < flagList.length; i += 1) {\r\n        if (flags[flagList[i]]) {\r\n            /* eslint-disable no-bitwise */\r\n            flagBits += 1 << i;\r\n        }\r\n    }\r\n\r\n    return flagBits;\r\n};\r\n\r\nexport const getBooleanFlagPermutations = (flagList, freezeFlags = {}) => {\r\n    const currentFlags = Object.assign({}, freezeFlags);\r\n    const resultList = [];\r\n\r\n    const changeFlagByIndex = (flagIndex) => {\r\n        if (flagIndex >= flagList.length) {\r\n            resultList.push(Object.assign({}, currentFlags));\r\n        } else {\r\n            const flag = flagList[flagIndex];\r\n            if (typeof freezeFlags[flag] !== 'undefined') {\r\n                changeFlagByIndex(flagIndex + 1);\r\n            } else {\r\n                currentFlags[flag] = false;\r\n                changeFlagByIndex(flagIndex + 1);\r\n                currentFlags[flag] = true;\r\n                changeFlagByIndex(flagIndex + 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    changeFlagByIndex(0);\r\n\r\n    return resultList;\r\n};\r\n\r\n// TODO: sort flags\r\nexport const sortFlags = i => i;\n","export { default as ModelkitManifestPlugin } from './modelkit-manifest-plugin';\n","import * as _ from 'lodash';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\n\r\nexport default class ManifestPlugin {\r\n    constructor(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    afterEnd(context) {\r\n        const featureFlagsToDirectoryMap = _.map(context.flagPermutations, (flagObj, flagIndex) =>\r\n            ({\r\n                flags: flagObj,\r\n                directory: context.flagPermutationDirectories[flagIndex],\r\n            }),\r\n        );\r\n\r\n        fs.writeFileSync(\r\n            path.join(context.config.outputDir, this.config.file),\r\n            JSON.stringify(featureFlagsToDirectoryMap, null, 2),\r\n        );\r\n    }\r\n}\r\n","export { default as ModelkitJsonLoader } from './modelkit-json-loader';\r\nexport { default as ModelkitJsLoader } from './modelkit-js-loader';\r\nexport { default as ModelkitYarnLoader } from './modelkit-yarn-loader';\r\n","import * as _ from 'lodash';\r\nimport BaseLoader from './modelkit-base-loader';\r\n\r\n// No array support atm.\r\nconst deleteProperty = (obj, pattern) => {\r\n    _.forEach(pattern, (value, key) => {\r\n        const subObj = obj[key];\r\n\r\n        if (typeof subObj === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (_.isPlainObject(value) && _.isPlainObject(subObj)) {\r\n            deleteProperty(subObj, value);\r\n        } else {\r\n            delete obj[key];\r\n        }\r\n    });\r\n};\r\n\r\nconst updateProperty = (obj, pattern) => {\r\n    _.forEach(pattern, (value, key) => {\r\n        const subObj = obj[key];\r\n\r\n        if (typeof subObj === 'undefined') {\r\n            obj[key] = value;\r\n\r\n            return;\r\n        }\r\n\r\n        if (_.isPlainObject(value) && _.isPlainObject(subObj)) {\r\n            updateProperty(subObj, value);\r\n        } else {\r\n            obj[key] = value;\r\n        }\r\n    });\r\n};\r\n\r\nexport default class JsonLoader extends BaseLoader {\r\n    constructor(config) {\r\n        super(config);\r\n        this.changes = config.changes;\r\n    }\r\n\r\n    readFileFlags() {\r\n        const flags = _.map(this.changes, i => i.flag);\r\n\r\n        return flags;\r\n    }\r\n\r\n    getFileSourceWithFlags(file, flags) {\r\n        let json = JSON.parse(file.source);\r\n\r\n        json = _.reduce(flags, (agg, value, key) => {\r\n            if (!value) {\r\n                return agg;\r\n            }\r\n\r\n            const changes = _.filter(this.changes, i => i.flag === key)[0];\r\n\r\n            if (typeof changes === 'undefined') {\r\n                return agg;\r\n            }\r\n\r\n            if (changes.delete) {\r\n                deleteProperty(agg, changes.delete);\r\n            }\r\n\r\n            if (changes.update) {\r\n                updateProperty(agg, changes.update);\r\n            }\r\n\r\n            return agg;\r\n        }, json);\r\n\r\n        const result = JSON.stringify(json, null, 2);\r\n\r\n        return result;\r\n    }\r\n}\r\n","import * as _ from 'lodash';\r\nimport escapeRegex from 'escape-string-regexp';\r\n\r\nexport default class BaseLoader {\r\n    constructor(config) {\r\n        if (config.test) {\r\n            this.test = config.test;\r\n        } else {\r\n            this.test = new RegExp(_.map(config.files, escapeRegex).join('|'));\r\n        }\r\n    }\r\n}\r\n","import * as _ from 'lodash';\r\nimport grasp from 'grasp';\r\nimport BaseLoader from './modelkit-base-loader';\r\n\r\nexport default class JsLoader extends BaseLoader {\r\n    constructor(config) {\r\n        super(config);\r\n        this.flagFunction = config.flagFunction;\r\n    }\r\n\r\n    readFileFlags(file) {\r\n        const functionSearchPattern = `${this.flagFunction}(_str, _bool)`;\r\n        const foundResult = grasp.search('equery', functionSearchPattern, file.source);\r\n        const flags = _.map(foundResult, i => i.arguments[0].value);\r\n\r\n        return flags;\r\n    }\r\n\r\n    getFileSourceWithFlags(file, flags) {\r\n        const functionSearchPattern = `${this.flagFunction}(_str, _bool)`;\r\n        const result = grasp.replace('equery', functionSearchPattern,\r\n            (getRaw, node) => JSON.stringify(flags[node.arguments[0].value]),\r\n            file.source,\r\n        );\r\n\r\n        return result;\r\n    }\r\n}\r\n","import * as _ from 'lodash';\r\nimport parse from 'yarn/lib/lockfile/parse';\r\nimport stringify from 'yarn/lib/lockfile/stringify';\r\nimport BaseLoader from './modelkit-base-loader';\r\n\r\n// No array support atm.\r\nconst deleteProperty = (obj, pattern) => {\r\n    _.forEach(pattern, (value, key) => {\r\n        const subObj = obj[key];\r\n\r\n        if (typeof subObj === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (_.isPlainObject(value) && _.isPlainObject(subObj)) {\r\n            deleteProperty(subObj, value);\r\n        } else {\r\n            delete obj[key];\r\n        }\r\n    });\r\n};\r\n\r\nconst updateProperty = (obj, pattern) => {\r\n    _.forEach(pattern, (value, key) => {\r\n        const subObj = obj[key];\r\n\r\n        if (typeof subObj === 'undefined') {\r\n            obj[key] = value;\r\n\r\n            return;\r\n        }\r\n\r\n        if (_.isPlainObject(value) && _.isPlainObject(subObj)) {\r\n            updateProperty(subObj, value);\r\n        } else {\r\n            obj[key] = value;\r\n        }\r\n    });\r\n};\r\n\r\nexport default class YarnLoader extends BaseLoader {\r\n    constructor(config) {\r\n        super(config);\r\n        this.changes = config.changes;\r\n    }\r\n\r\n    readFileFlags() {\r\n        const flags = _.map(this.changes, i => i.flag);\r\n\r\n        return flags;\r\n    }\r\n\r\n    getFileSourceWithFlags(file, flags) {\r\n        const source = file.source.replace(/\\r\\n/g, '\\n'); // important for yarn parser\r\n        let json = parse(source, file.filePath);\r\n\r\n        json = _.reduce(flags, (agg, value, key) => {\r\n            if (!value) {\r\n                return agg;\r\n            }\r\n\r\n            const changes = _.filter(this.changes, i => i.flag === key)[0];\r\n\r\n            if (typeof changes === 'undefined') {\r\n                return agg;\r\n            }\r\n\r\n            if (changes.delete) {\r\n                deleteProperty(agg, changes.delete);\r\n            }\r\n\r\n            if (changes.update) {\r\n                updateProperty(agg, changes.update);\r\n            }\r\n\r\n            return agg;\r\n        }, json);\r\n\r\n        const result = stringify(json, false);\r\n\r\n        return result;\r\n    }\r\n}\r\n"]}